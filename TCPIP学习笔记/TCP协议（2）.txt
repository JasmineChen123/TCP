第21章 TCP的超时和重传
TCP的可靠性：
使用定时器，当定时器溢出时，重传该数据
关键：
确定超时间隔和重传频率

TCP的四个不同的定时器
（1）重传定时器
（2）坚持定时器
（3）保活定时器
（4）2MSL定时器

1.往返时间测量
RTT（往返时间）：发送到接受所使用的时间
RTO（超时重传时间）：发送端发送之后，
在RTO时间内没有受到对方确定，即重传该报文

2.公式
最早的公式：
R=aR+(1-a)M
RTP=Rb

a=0.9，经验系数，平滑因子
b=2
含义：旧的RTT(R)和新的RTT(M)综合考虑新的RTT

修正公式
背景：在RTT变化很大时，可能有不必要的重传，
导致网络负载增加
Err=M-A
A=A+gErr
D=D+h(Err-D)
RTO=A+4D

(A 平滑的RTT D 平滑的方差 g增量 h方差的增益）

优点：RTO值基于RTT的均值和方差
更好地响应了RTT的变化

注意：
在重传的情况下，
（1）对超时重传的数据报，不更新RTT
（2）RTO不用上面的公式计算，使用“指数退避”方法
（3）重传数据确认后，更新RTT 和RTO

2.拥塞避免算法

算法：
拥塞避免算法：
窗口大小指数方式增长
慢启动算法：
每经历一次往返时间cwnd增加1
变量：拥塞窗口（cwnd)和慢启动门限（ssthresh)

配合算法：
1.初始化cwnd=1，ssthresh=16 
2.刚开始用慢启动算法发送数据，直到达到ssthresh
3.使用“拥塞避免”算法，知道达到“网络拥塞”
4.使用乘法减小，设置新的ssthresh为cwnd的1/2
并且cwnd=1，继续重复上述过程

接受方接受窗口和发送方拥塞窗口的大小关系
实际传输的数据=Min(拥塞窗口，接收方窗口)

3.快速重传和快速恢复算法
快速重传：
快重传算法要求接收方收到“一个失序的报文段”立即发出重复确认
不要等待自己发送数据才捎带确认
快速恢复算法：
当发送端接收到三个确认，把ssthresh减半，
但接下来并不执行慢启动算法，二十执行拥塞避免法

第21章 TCP坚持定时器
原理：
    TCP服务器收到客户端的0的报告，发送方使用
    一个坚持定时器来周期性地发送窗口探测报文
    以便发现窗口是否已经增大
问题：
    基于窗口的流量控制，导致“糊涂窗口综合征”，使少量数据通过连接进行交换
措施：
    1）接收方不通告小窗口
    2）发送端只能在下列条件下才能发送：
     a)发送满长度的报文段
     b)发送至少使通告窗口大小一半的报文段
     c)发送任何数据并且不接受（ACK）
第22章 TCP保活定时器
争议：耗费带宽
应用情景：
服务器对应主机状态（崩溃，重启，关机）
如果一个连接在两个小时内没有任何动作，则服务器向客户端发送报文
    1）客户机依然正常运行，且服务器可达
TCP响应正常，两小时内保活定时器复位
    2）客户机崩溃，在关闭或正在重新启动
服务器收不到探查的响应 
差错：连接超时
    3）客户主机崩溃且已经重新启动
服务器可以收到其保活探查的响应
响应是一个复位，服务器终止连接
差错：连接被对方复位
    4）客户主机正常运行，但服务器不可达
服务器收不到探查的响应






